name: run-digger
description: Manage terraform collaboration
author: Digger

inputs:
  workspace:
    description: Name of the terraform workspace
    required: false
    default: default
  setup-aws:
    description: Setup AWS
    required: false
    default: 'false'
  aws-access-key-id:
    description: AWS access key id
    required: false
  aws-secret-access-key:
    description: AWS secret access key
    required: false
  aws-region:
    description: AWS region
    required: false
    default: us-east-1
  setup-google-cloud:
    description: Setup google cloud
    required: false
    default: 'false'
  google-auth-credentials:
      description: Google auth credentials
      required: false
  setup-terragrunt:
    description: Setup terragrunt
    required: false
    default: 'false'
  terragrunt-version:
    description: Terragrunt version
    required: false
    default: v0.45.4
  setup-terraform:
    description: Setup terraform
    required: false
    default: 'false'
  terraform-version:
    description: Terraform version
    required: false
    default: v1.4.5

outputs:
  output:
    value: ${{ steps.digger.outputs.output }}
    description: The terraform output

runs:
  using: composite
  steps:
    - uses: actions/checkout@v3
      if: github.event_name == 'issue_comment'
      with:
          ref: refs/pull/${{ github.event.issue.number }}/merge
    - uses: actions/checkout@v3
      if: github.event_name != 'issue_comment'

    - id: google-auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ inputs.google-auth-credentials }}
      if: inputs.setup-google-cloud == 'true'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'
      if: inputs.setup-google-cloud == 'true'

    - name: Configure Test AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
      if: inputs.setup-aws == 'true'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ inputs.terraform-version }}
      if: inputs.setup-terraform == 'true'

    - name: Setup Terragrunt
      uses: autero1/action-terragrunt@v1.1.0
      with:
        terragrunt_version: ${{ inputs.terragrunt-version }}
      if: inputs.setup-terragrunt == 'true'

    - name: build and run digger
      if: ${{ !startsWith(github.action_ref, 'v') }}
      shell: bash
      run: |
          cd ${{ github.action_path }}
          go build -o digger ./cmd/digger
          chmod +x digger
          mv digger /usr/local/bin/digger
          cd ${{ github.workspace }}
          digger
    - name: run digger
      if: ${{ startsWith(github.action_ref, 'v') }}
      env:
        actionref: ${{ github.action_ref }}
      id: digger
      shell: bash
      run: |
        curl -sL https://github.com/diggerhq/digger/releases/download/${actionref}/digger-${{ runner.os  }}-${{ runner.arch }} -o digger
        chmod +x digger
        mv digger /usr/local/bin/digger
        cd ${{ github.workspace }}
        digger
    - name: generate artifact name based on issue number or pr number
      id: artifact
      shell: bash
      run: |
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            echo "::set-output name=artifact::plans-${{ github.event.issue.number }}"
          else
            echo "::set-output name=artifact::plans-${{ github.event.number }}"
          fi
    - name: upload plan
      uses: actions/upload-artifact@v3
      with:
          name: ${{ steps.artifact.outputs.artifact }}
          path: '*.tfplan'
          retention-days: 14

branding:
  icon: globe
  color: purple
